{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/pages/About.js","components/pages/NotFound.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","bind","onDeleteClick","delete","name","email","phone","className","onClick","style","cursor","float","color","to","marginRight","Contacts","Fragment","About","NotFound","Header","branding","href","defaultProps","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","a","preventDefault","newContact","post","history","push","EditContact","match","params","updContact","put","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a94b2a14.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state,action) => {\r\n    switch(action.type){\r\n        case 'DELETE_CONTACT':\r\n            return{\r\n                ...state,\r\n                contacts: state.contacts.filter((contact) => contact.id !== action.payload)\r\n            };\r\n        case 'ADD_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: [action.payload, ...state.contacts]\r\n            };\r\n        case 'UPDATE_CONTACT':\r\n            return {\r\n                ...state,\r\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact=action.payload) : contact)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport class Provider extends Component{\r\n    state={\r\n        contacts: [],\r\n        dispatch: action => this.setState(state => reducer(state,action))\r\n    };\r\n\r\n    async componentDidMount(){\r\n        const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n        this.setState({contacts:res.data});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Context.Provider value={this.state}>\r\n                {this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react'\r\nimport {Consumer} from '../../context';\r\nimport PropTypes from 'prop-types';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nclass Contact extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = { showContactInfo: false};\r\n        this.onShowClick = this.onShowClick.bind(this);\r\n        this.onDeleteClick = this.onDeleteClick.bind(this);\r\n    }\r\n    onShowClick(){\r\n        this.setState({showContactInfo: !this.state.showContactInfo});\r\n    }\r\n    async onDeleteClick(id,dispatch){\r\n        await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`)\r\n        dispatch({type:\"DELETE_CONTACT\",payload:id});\r\n    }\r\n    render() {\r\n        const { id, name, email, phone } = this.props.contact;\r\n        const { showContactInfo } = this.state;\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card card-body mb-3\">\r\n                            <h4>{name}\r\n                                <i\r\n                                    onClick={() => this.onShowClick()}\r\n                                    className=\"fas fa-sort-down\"\r\n                                    style={{ cursor: \"pointer\" }}>\r\n                                </i>\r\n                                <i className=\"fas fa-times\"\r\n                                    style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                                    onClick={() => this.onDeleteClick(id, dispatch)}>\r\n                                </i>\r\n                                <Link to={`contact/edit/${id}`}>\r\n                                    <i\r\n                                        className=\"fas fa-pencil-alt\"\r\n                                        style={{\r\n                                            cursor: \"pointer\",\r\n                                            float: \"right\",\r\n                                            color: \"black\",\r\n                                            marginRight:\"1rem\"\r\n                                        }}>\r\n                                    </i>\r\n                                </Link>\r\n                            </h4>\r\n                            {showContactInfo ? (\r\n                                <ul className=\"list-group\">\r\n                                    <li className=\"list-group-item\">Email : {email}</li>\r\n                                    <li className=\"list-group-item\">phone : {phone}</li>\r\n                                </ul>\r\n                            ) : null}\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        )\r\n    }\r\n}\r\n\r\nContact.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n    render() {\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { contacts } = value;\r\n                    return (\r\n                        <React.Fragment>\r\n                            <h1 className=\"display-4 mb-2\">Contact List</h1>\r\n                            {contacts.map(contact => (\r\n                                <Contact\r\n                                    key={contact.id}\r\n                                    contact={contact}\r\n                                ></Contact>\r\n                            ))}\r\n                        </React.Fragment>\r\n                    );\r\n                }}\r\n            </Consumer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react'\r\n\r\nexport default function About() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\">About Contact Manager</h1>\r\n            <p className=\"lead\">Simple app to manage contacts</p>\r\n            <p className=\"text-secondary\">Version 1.0.0</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function NotFound() {\r\n    return (\r\n        <div>\r\n            <h1 className=\"display-4\"><span className=\"text-danger\">404</span> Page Not Found</h1>\r\n            <p className=\"lead\">Sorry, the page no longer exists</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    const { branding } = props;\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\r\n            <div className=\"container\">\r\n                <a href=\"/\" className=\"navbar-brand\">{branding}</a>\r\n            </div>\r\n            <div>\r\n                <ul className=\"navbar-nav mr-auto\">\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\" className=\"nav-link\">\r\n                           <i className=\"fas fa-home\" /> Home\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/contact/add\" className=\"nav-link\">\r\n                           <i className=\"fas fa-plus\" /> Add\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/about\" className=\"nav-link\">\r\n                           <i className=\"fas fa-question\" /> About\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.defaultProps = {\r\n    branding:'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n    branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport classnames from 'classnames';\r\n\r\n\r\nconst TextInputGroup = ({\r\n    label,\r\n    name,\r\n    value,\r\n    placeholder,\r\n    type,\r\n    onChange,\r\n    error\r\n}) => {\r\n    return (\r\n        <div className=\"form-group\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <input\r\n                type={type}\r\n                name={name}\r\n                className={classnames('form-control form-control-lg',{'is-invalid':error})}\r\n                placeholder={placeholder}\r\n                value={value}\r\n                onChange={onChange}\r\n            />\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    placeholder: PropTypes.string.isRequired,\r\n    value: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    onChange: PropTypes.func.isRequired,\r\n    error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n    type:'text'\r\n};\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone} = this.state;\r\n\r\n        if(name === ''){\r\n            this.setState({errors:{name:\"Name Is Required\"}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors:{email:\"Email Is Required\"}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors:{phone:\"Phone Is Required\"}});\r\n            return;\r\n        }\r\n\r\n        const newContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.post(\"https://jsonplaceholder.typicode.com/users\",newContact)\r\n        dispatch({type:\"ADD_CONTACT\",payload:res.data});\r\n\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Add Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        type=\"email\"\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Add Contact\"\r\n                                        className=\"btn btn-dark btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n\r\n            </Consumer>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default AddContact;","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        phone: '',\r\n        errors:{}\r\n    };\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n    onSubmit = async (dispatch,e) => {\r\n        e.preventDefault();\r\n        \r\n        const { name, email, phone} = this.state;\r\n\r\n        if(name === ''){\r\n            this.setState({errors:{name:\"Name Is Required\"}});\r\n            return;\r\n        }\r\n\r\n        if(email === ''){\r\n            this.setState({errors:{email:\"Email Is Required\"}});\r\n            return;\r\n        }\r\n\r\n        if(phone === ''){\r\n            this.setState({errors:{phone:\"Phone Is Required\"}});\r\n            return;\r\n        }\r\n\r\n        const { id } = this.props.match.params;\r\n        const updContact = {\r\n            name,\r\n            email,\r\n            phone\r\n        };\r\n\r\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`,updContact);\r\n        dispatch({type:\"UPDATE_CONTACT\",payload:res.data});\r\n\r\n        this.setState({\r\n            name:'',\r\n            email:'',\r\n            phone:'',\r\n            errors:{}\r\n        });\r\n\r\n        this.props.history.push('/');\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const { id } = this.props.match.params;\r\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n        const contact = res.data;\r\n\r\n        this.setState({\r\n            name:contact.name,\r\n            email:contact.email,\r\n            phone:contact.phone\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { name, email, phone, errors } = this.state;\r\n\r\n        return (\r\n            <Consumer>\r\n                {value => {\r\n                    const { dispatch } = value;\r\n                    return (\r\n                        <div className=\"card mb-3\">\r\n                            <div className=\"card-header\">\r\n                                Edit Contact\r\n                            </div>\r\n                            <div className=\"card-body\">\r\n                                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\r\n                                    <TextInputGroup\r\n                                        label=\"Name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Enter Name...\"\r\n                                        value={name}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.name}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        type=\"email\"\r\n                                        label=\"Email\"\r\n                                        name=\"email\"\r\n                                        placeholder=\"Enter Email...\"\r\n                                        value={email}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.email}\r\n                                    />\r\n                                    <TextInputGroup\r\n                                        label=\"Phone\"\r\n                                        name=\"phone\"\r\n                                        placeholder=\"Enter Phone...\"\r\n                                        value={phone}\r\n                                        onChange={this.onChange}\r\n                                        error={errors.phone}\r\n                                    />\r\n                                    <input\r\n                                        type=\"submit\"\r\n                                        value=\"Update Contact\"\r\n                                        className=\"btn btn-dark btn-block\"\r\n                                    />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n\r\n            </Consumer>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default EditContact;","import React, { Component } from 'react';\nimport { HashRouter as Router, Switch, Route} from 'react-router-dom';\n\nimport Contacts from './components/contacts/Contacts';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound'\nimport Header from './components/layout/Header';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\"></Header>\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}